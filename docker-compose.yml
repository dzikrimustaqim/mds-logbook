services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: mds-logbook-app:latest
    container_name: mds_logbook_app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html:delegated
      # Exclude problematic directories for better performance and avoid cache conflicts
      - /var/www/html/node_modules
      - /var/www/html/vendor
      - bootstrap_cache:/var/www/html/bootstrap/cache
    environment:
      - COMPOSER_CACHE_DIR=/tmp/composer-cache
      - APP_SERVICES_CACHE=/var/www/html/bootstrap/cache/services.php
    depends_on:
      db:
        condition: service_healthy
    networks:
      - mds_network
    # Simplified health check
    healthcheck:
      test: ["CMD-SHELL", "test -f /var/www/html/.env && grep -q 'APP_KEY=base64:' /var/www/html/.env"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  web:
    image: nginx:stable-alpine
    container_name: mds_logbook_web
    restart: unless-stopped
    ports:
      - "18080:80"
    volumes:
      - ./:/var/www/html:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      app:
        condition: service_healthy
    networks:
      - mds_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  node:
    image: node:20-bullseye
    container_name: mds_logbook_node
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - node_modules:/var/www/html/node_modules
    command: ["sh", "-c", "npm install --silent && npm run build && echo 'Frontend build completed' && tail -f /dev/null"]
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    networks:
      - mds_network

  db:
    image: mysql:8.1
    container_name: mds_logbook_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: logbook
      MYSQL_USER: mds
      MYSQL_PASSWORD: mdspass
      MYSQL_CHARACTER_SET_SERVER: utf8mb4
      MYSQL_COLLATION_SERVER: utf8mb4_unicode_ci
    volumes:
      - dbdata:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - mds_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "mds", "-pmdspass"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

volumes:
  dbdata:
    driver: local
  node_modules:
    driver: local
  bootstrap_cache:
    driver: local

networks:
  mds_network:
    driver: bridge