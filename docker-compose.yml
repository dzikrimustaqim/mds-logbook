services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: mds-logbook-app:latest
    container_name: mds_logbook_app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html:delegated
    env_file:
      - .env
    depends_on:
      - db

  web:
    image: nginx:stable-alpine
    container_name: mds_logbook_web
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www/html:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app

  node:
    image: node:20-bullseye
    container_name: mds_logbook_node
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    command: ["sh","-c","tail -f /dev/null"]
    environment:
      - NODE_ENV=development

  db:
    image: mysql:8.1
    container_name: mds_logbook_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: logbook
      MYSQL_USER: mds
      MYSQL_PASSWORD: mdspass
    volumes:
      - dbdata:/var/lib/mysql
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  dbdata:
    driver: local
